type Approval @entity {
  id: ID!
  value: BigInt!
  owner: Bytes! # address
}

type Claim @entity {
  id: ID!
  requestedAmount: BigInt!
  claimedAmount: BigInt!
  feeAmount: BigInt!
  burnedAmount: BigInt!
  account: Bytes! # address
  price: Int
}

type StrategyUpdate @entity {
  id: ID!
  perBlockReward: BigInt!
  startBlockNumber: BigInt!
  endBlockNumber: BigInt!
}

type FeeClaimed @entity {
  id: ID!
  receiver: Bytes! # address
  amount: BigInt!
  price: Int
}

type Migrated @entity {
  id: ID!

  account: Bytes! # address
  omTokenV1StakeAmount: BigInt!
  stakingPoolV1Reward: BigInt!
  stakingPoolV2Reward: BigInt!
  price: Int
}

type NextStrategyRemoved @entity {
  id: ID!

}

type NextStrategyUpdated @entity {
  id: ID!
  perBlockReward: BigInt!
  startBlockNumber: BigInt!
  endBlockNumber: BigInt!
}

type PoolIncreased @entity {
  id: ID!
  payer: Bytes! # address
  amount: BigInt!
}

type PriceUpdated @entity {
  id: ID!
  base: BigInt!
  mantissa: BigInt!
  exponentiation: BigInt!
  price: Int
}

type RewardsUnlocked @entity {
  id: ID!
  amount: BigInt!
  price: Int
}

type Staked @entity {
  id: ID!
  account: Bytes! # address
  payer: Bytes! # address
  stakedAmount: BigInt!
  mintedAmount: BigInt!
  price: Int
}

type Transfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt!
  price: Int
}

type Unstaked @entity {
  id: ID!
  account: Bytes! # address
  requestedAmount: BigInt!
  unstakedAmount: BigInt!
  burnedAmount: BigInt!
  price: Int
}

type UnstakingTimeUpdated @entity {
  id: ID!
  unstakingTime: BigInt!

}

type Withdrawed @entity {
  id: ID!
  account: Bytes! # address
  amount: BigInt!
  price: Int
}

type SwapTokensForExactTokens @entity {
  id: ID!
  amountOut: BigInt!
  amountInMax: BigInt!
  deadline: BigInt!
} 

type EthUsdSync @entity {
  id: ID!
  eth: BigInt!
  usd: BigInt!
} 

type EthOmSync @entity {
  id: ID!
  eth: BigInt!
  om: BigInt!
} 

# Data accumulated and condensed into day stats for all of Uniswap
type MantraDaoDayData @entity {
  id: ID! # timestamp rounded to current day by dividing by 86400
  date: Int!

  totalLiquidityUSD: BigInt!
  totalLiquidityOM: BigInt!

  txCount: BigInt!
}